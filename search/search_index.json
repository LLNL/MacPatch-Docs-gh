{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"MacPatch v3.1 Overview MacPatch simplifies the act of patching and installing software on Mac OS X based systems. The client relies on using the built-in software update application for patching the Mac OS X system updates and it's own scan and patch engine for custom patches. MacPatch offers features and functionality that provide Mac OS X administrators with best possible patching solution to meet the challenges of supporting Mac OS X in a Workgroup or Enterprise. Features Custom patch creation Custom patch groups End-User Self Patch Software Distribution Inventory Collection Basic Reporting Mac OS X Profiles support AutoPKG support Help For questions or help visit MacPatch Google group MacPatch Slack group Source MacPatch - GITHUB","title":"Home"},{"location":"index.html#macpatch-v31","text":"","title":"MacPatch v3.1"},{"location":"index.html#overview","text":"MacPatch simplifies the act of patching and installing software on Mac OS X based systems. The client relies on using the built-in software update application for patching the Mac OS X system updates and it's own scan and patch engine for custom patches. MacPatch offers features and functionality that provide Mac OS X administrators with best possible patching solution to meet the challenges of supporting Mac OS X in a Workgroup or Enterprise.","title":"Overview"},{"location":"index.html#features","text":"Custom patch creation Custom patch groups End-User Self Patch Software Distribution Inventory Collection Basic Reporting Mac OS X Profiles support AutoPKG support","title":"Features"},{"location":"index.html#help","text":"For questions or help visit MacPatch Google group MacPatch Slack group","title":"Help"},{"location":"index.html#source","text":"MacPatch - GITHUB","title":"Source"},{"location":"apple_patches.html","text":"Apple patch content in MacPatch is collected from the Apple Software Update servers. Every patch apple offers is processed and posted to the MacPatch database via the MPSUSPatchSync.py script. This script is run on a 8 hour interval by default. By default all new apple patches will show up in the database with it's patch state set to \"Create\". In order for a patch to install it's state needs to be changed to \"QA\" or \"Production\". Example - Apple patch in Create state Extending an Apple Patch MacPatch offers the ability to enhance and extend apple supplied patches. MacPatch offers the ability to change the order in which the patch is installed. This is done with the \"Patch Install Weight\"; the lower the number the sooner the install. By default custom patches have an install weight of 30 and apple patches have an install weight of 60. You also have the ability to override the reboot setting as well. For example if you have an apple patch that does not require a reboot you can change it so it does and vice versa. The final option to extending an apple patch is being able to assign and pre and post install script. Testing Patch Content The preferred method to testing new patches is once a patch has been created involves creating a new patch group and client group and changing the client setting for the new client group. Create new patch group, call it \"QA\" Create new client group, call it \"QA\" Edit the client group settings Set \"Patch Group\" to \"QA\" Set \"Patch State Patching\" to \"Production QA\" Save the settings Assign client to the \"QA\" client group With the groups and the settings created, and client(s) assigned. The next step will be to change the \"Patch State\" on the newly created patch to \"QA\". In this configuration any client assigned to the QA client group will now scan for the new patch, it will not patch it until the new patch has been added to the QA patch group and saved.","title":"Apple Patches"},{"location":"apple_patches.html#extending-an-apple-patch","text":"MacPatch offers the ability to enhance and extend apple supplied patches. MacPatch offers the ability to change the order in which the patch is installed. This is done with the \"Patch Install Weight\"; the lower the number the sooner the install. By default custom patches have an install weight of 30 and apple patches have an install weight of 60. You also have the ability to override the reboot setting as well. For example if you have an apple patch that does not require a reboot you can change it so it does and vice versa. The final option to extending an apple patch is being able to assign and pre and post install script.","title":"Extending an Apple Patch "},{"location":"apple_patches.html#testing-patch-content","text":"The preferred method to testing new patches is once a patch has been created involves creating a new patch group and client group and changing the client setting for the new client group. Create new patch group, call it \"QA\" Create new client group, call it \"QA\" Edit the client group settings Set \"Patch Group\" to \"QA\" Set \"Patch State Patching\" to \"Production QA\" Save the settings Assign client to the \"QA\" client group With the groups and the settings created, and client(s) assigned. The next step will be to change the \"Patch State\" on the newly created patch to \"QA\". In this configuration any client assigned to the QA client group will now scan for the new patch, it will not patch it until the new patch has been added to the QA patch group and saved.","title":"Testing Patch Content "},{"location":"client_build_install.html","text":"Description This document will walk you through the build and upload of the MacPatch 3.1.x client agent. When cloning the MacPatch software from GitHub includes the latest version of the client agent software. All of the bnaries are signed as part of this process. This compiled agent can be uploaded to the MacPatch server as is. If you wish to build and compile your own client agent, this is fully supported as well. Table of Contents Requirements Build Client Upload Client Requirements Operating System: macOS Mac OS X 10.10 or higher Xcode.app and command line developer tools the license agreement needs to have been accepted. Build and Compile Client Software Compiling the MacPatch client software is a pretty simple process. Inside the cloned MacPatch repository contains the MPBuildClient.sh script. This script will need to be run using sudo. The script will ask a few questions in regards to building the client installer package. First you will be asked for the client version. Please enter a client version. Since your compiling your own you can use what ever versioning you wish. Next a build number is required and a miniumum macOS version. With those settings entered, you only have 2 more. Next you'll be asked for agent build state, by default it's set to release. If your going to tweek the agent I recommend using the Alpha and Beta stages. The last question is if you want to code sign the MacPatch client binaries. Note: Please use the Mac Developer certificate to sign your binaries. Once completed the script will open the directory containing the zipped PKG installer of the MacPatch client. The directory is /private/tmp/MP/Client31 . Upload Client Software Uploading the client agent is a fairly simple process. Either you will upload the MPClientInstall.pkg.zip from /opt/MacPatch/Source/Agent or from /private/tmp/MP/Client31 , if you have compiled the agent your self. To get the agent uploader application you can login to the agent console and download it from Admin- Client Agents - Deploy or /opt/MacPatch/Server/conf/Content/Web/tools/MPAgentUploader.zip . Before uploading your agent it is recommended that you verify your MacPatch server settings in the MacPatch admin console. Make sure it's enabled and that the host name and settings are correct. This can be verified at Admin- MacPatch Servers Uploading When uploading a new agent it's recommended that you QA the agent first by compiling and siging the agent installer localy and test it out before uploading the agent to the server. To build it locally with the server settings go to Preferences and select \"Do not upload package\". The agent uploader only has a few options. Here is a list and their definitions Attribute Description Optional Host Host name of the MacPatch master server Required Port Port of the MacPatch master server api. 3600 is the default. Required Package Please use the choose button to propogate the agent path. Also please use the pkg.zip Required Identity The apple installer certificate identity e.g(Developer ID Installer: ...) Optional Sign PKG Enable package signing, this is highly recommended. Optional Plugins MacPatch supports custom inventory plugins, this is a directory containing your custom plugins. Optional OS Config Profiles Directory containing macOS config profiles to get installed with the agent. I use this for intermediate certificates. Optional Registration key Registration key to register the client with the MacPatch server. This feature is optional if using Auto registration. Optional","title":"Client Build & Upload"},{"location":"client_build_install.html#description","text":"This document will walk you through the build and upload of the MacPatch 3.1.x client agent. When cloning the MacPatch software from GitHub includes the latest version of the client agent software. All of the bnaries are signed as part of this process. This compiled agent can be uploaded to the MacPatch server as is. If you wish to build and compile your own client agent, this is fully supported as well.","title":"Description"},{"location":"client_build_install.html#table-of-contents","text":"Requirements Build Client Upload Client","title":"Table of Contents"},{"location":"client_build_install.html#requirements","text":"Operating System: macOS Mac OS X 10.10 or higher Xcode.app and command line developer tools the license agreement needs to have been accepted.","title":"Requirements "},{"location":"client_build_install.html#build-and-compile-client-software","text":"Compiling the MacPatch client software is a pretty simple process. Inside the cloned MacPatch repository contains the MPBuildClient.sh script. This script will need to be run using sudo. The script will ask a few questions in regards to building the client installer package. First you will be asked for the client version. Please enter a client version. Since your compiling your own you can use what ever versioning you wish. Next a build number is required and a miniumum macOS version. With those settings entered, you only have 2 more. Next you'll be asked for agent build state, by default it's set to release. If your going to tweek the agent I recommend using the Alpha and Beta stages. The last question is if you want to code sign the MacPatch client binaries. Note: Please use the Mac Developer certificate to sign your binaries. Once completed the script will open the directory containing the zipped PKG installer of the MacPatch client. The directory is /private/tmp/MP/Client31 .","title":"Build and Compile Client Software "},{"location":"client_build_install.html#upload-client-software","text":"Uploading the client agent is a fairly simple process. Either you will upload the MPClientInstall.pkg.zip from /opt/MacPatch/Source/Agent or from /private/tmp/MP/Client31 , if you have compiled the agent your self. To get the agent uploader application you can login to the agent console and download it from Admin- Client Agents - Deploy or /opt/MacPatch/Server/conf/Content/Web/tools/MPAgentUploader.zip . Before uploading your agent it is recommended that you verify your MacPatch server settings in the MacPatch admin console. Make sure it's enabled and that the host name and settings are correct. This can be verified at Admin- MacPatch Servers","title":"Upload Client Software "},{"location":"client_build_install.html#uploading","text":"When uploading a new agent it's recommended that you QA the agent first by compiling and siging the agent installer localy and test it out before uploading the agent to the server. To build it locally with the server settings go to Preferences and select \"Do not upload package\". The agent uploader only has a few options. Here is a list and their definitions Attribute Description Optional Host Host name of the MacPatch master server Required Port Port of the MacPatch master server api. 3600 is the default. Required Package Please use the choose button to propogate the agent path. Also please use the pkg.zip Required Identity The apple installer certificate identity e.g(Developer ID Installer: ...) Optional Sign PKG Enable package signing, this is highly recommended. Optional Plugins MacPatch supports custom inventory plugins, this is a directory containing your custom plugins. Optional OS Config Profiles Directory containing macOS config profiles to get installed with the agent. I use this for intermediate certificates. Optional Registration key Registration key to register the client with the MacPatch server. This feature is optional if using Auto registration. Optional","title":"Uploading"},{"location":"custom_patches.html","text":"MacPatch custom patch content is pretty simple to create. All content is created via the new content wizard. Keep in mind that there are only 4 required attributes which are required to create a patch. The 4 attributes are Patch Name, Patch Version, Patch Group ID, Patch Package . Create New Patch Creating a new patch is broken down in to 4 steps. In this example we will be creating a patch for Firefox. Step 1 Patch Name, and Patch Version are required fields. By default a new patch has it's patch state set to \"Create\". A patch will not show as needed to a client until it's state is at least set to \"QA\". Step 2 While none of the fields are required, adding patch detection criteria is highly recommended. In this example we have added two detection queries. The first one looks to see if the /Applications/Firefox.app exists. The second query looks to see if Firefox version is less than 30.0.0. For a patch to become required all patch detection criteria queries need to return True . If any return false a patch is not needed. Query Language Cheat Sheet Step 3 Patch Group ID, and Patch Package are required fields. In this example it's important to note that the \"Patch Group ID\" is in the form Reverse URL and similar to Bundle ID. While anything can be used as a \"Patch Group ID\", bundle id's are suggested. When uploading a patch a *.pkg.zip file is required at this time. Step 4 Here you can add pre post requisite packages. Also, once the patch is created you will need to make it active. This can only be done once the initial patch has been created. Patch Criteria Syntax Base Criteria Description BundleID Query Value Query Result Example Syntax Exists BundleID Value True/False Exists@com.adobe.Reader@True Version BundleID Value Version;(EQ,LT,LTE,GT,GTE,NEQ) Version@com.adobe.Reader@9.3.0;LT File Query Value Query Result Example Syntax Exists File Path True/False Exists@/Applications/Firefox.app@True Date File Path True/False Date@/Applications/Firefox.app@2010-03-22 12:00:00;LT Hash File Path MD5 Hash;True/False Hash@/Applications/Firefox.app@123432dsh2362h3h;TRUE Version File Path Version;(EQ,LT,LTE,GT,GTE,NEQ) Version@/Applications/Firefox.app@3.5.7;LT Script Query Value Query Result Example Syntax Notes Script Script Text True #!/bin/sh ... If a @ is used it must be escaped with @ Testing Patch Content The preferred method to testing new patches is once a patch has been created involves creating a new patch group and client group and changing the client setting for the new client group. Create new patch group, call it \"QA\" Create new client group, call it \"QA\" Edit the client group settings Set \"Patch Group\" to \"QA\" Set \"Patch State Patching\" to \"Production QA\" Save the settings Assign client to the \"QA\" client group With the groups and the settings created, and client(s) assigned. The next step will be to change the \"Patch State\" on the newly created patch to \"QA\". In this configuration any client assigned to the QA client group will now scan for the new patch, it will not patch it until the new patch has been added to the QA patch group and saved.","title":"Custom Patches"},{"location":"custom_patches.html#create-new-patch","text":"Creating a new patch is broken down in to 4 steps. In this example we will be creating a patch for Firefox. Step 1 Patch Name, and Patch Version are required fields. By default a new patch has it's patch state set to \"Create\". A patch will not show as needed to a client until it's state is at least set to \"QA\". Step 2 While none of the fields are required, adding patch detection criteria is highly recommended. In this example we have added two detection queries. The first one looks to see if the /Applications/Firefox.app exists. The second query looks to see if Firefox version is less than 30.0.0. For a patch to become required all patch detection criteria queries need to return True . If any return false a patch is not needed. Query Language Cheat Sheet Step 3 Patch Group ID, and Patch Package are required fields. In this example it's important to note that the \"Patch Group ID\" is in the form Reverse URL and similar to Bundle ID. While anything can be used as a \"Patch Group ID\", bundle id's are suggested. When uploading a patch a *.pkg.zip file is required at this time. Step 4 Here you can add pre post requisite packages. Also, once the patch is created you will need to make it active. This can only be done once the initial patch has been created.","title":"Create New Patch "},{"location":"custom_patches.html#patch-criteria-syntax","text":"Base Criteria Description BundleID Query Value Query Result Example Syntax Exists BundleID Value True/False Exists@com.adobe.Reader@True Version BundleID Value Version;(EQ,LT,LTE,GT,GTE,NEQ) Version@com.adobe.Reader@9.3.0;LT File Query Value Query Result Example Syntax Exists File Path True/False Exists@/Applications/Firefox.app@True Date File Path True/False Date@/Applications/Firefox.app@2010-03-22 12:00:00;LT Hash File Path MD5 Hash;True/False Hash@/Applications/Firefox.app@123432dsh2362h3h;TRUE Version File Path Version;(EQ,LT,LTE,GT,GTE,NEQ) Version@/Applications/Firefox.app@3.5.7;LT Script Query Value Query Result Example Syntax Notes Script Script Text True #!/bin/sh ... If a @ is used it must be escaped with @","title":"Patch Criteria Syntax "},{"location":"custom_patches.html#testing-patch-content","text":"The preferred method to testing new patches is once a patch has been created involves creating a new patch group and client group and changing the client setting for the new client group. Create new patch group, call it \"QA\" Create new client group, call it \"QA\" Edit the client group settings Set \"Patch Group\" to \"QA\" Set \"Patch State Patching\" to \"Production QA\" Save the settings Assign client to the \"QA\" client group With the groups and the settings created, and client(s) assigned. The next step will be to change the \"Patch State\" on the newly created patch to \"QA\". In this configuration any client assigned to the QA client group will now scan for the new patch, it will not patch it until the new patch has been added to the QA patch group and saved.","title":"Testing Patch Content "},{"location":"patch_groups.html","text":"Table of Contents Description Group properties Assign patches Patch groups are a collection of apple and custom patches. Patch groups are used to determine which patches are approved to be installed. A patch group also has a type identifier. The type identifier is used determine the type of patches which are visible to the group. For example on a production group will only allow you to assign production patches to it. Group Properties There are only a couple of things to remember about patch groups. The owner of the group has the ability to assign other admins which can add and subtract patches from the group. The owner is the only account which can re-name the patch group and the owner is the only account which can re-assign ownership to another account and change it's type. To edit the groups properties, simply click on the \"Pencil\" icon for the group. Patch group properties Assign Patches To assign patches to a patch group click on the list icon . The patch group will open and you can assign or remove assigned patches from here. It important to note, once your done selecting your patches you will need to \"Save\" the patch group. The MacPatch client agent will not recognize the changes without saving. To save the group click on the disk icon .","title":"Patch Groups"},{"location":"patch_groups.html#table-of-contents","text":"Description Group properties Assign patches Patch groups are a collection of apple and custom patches. Patch groups are used to determine which patches are approved to be installed. A patch group also has a type identifier. The type identifier is used determine the type of patches which are visible to the group. For example on a production group will only allow you to assign production patches to it.","title":"Table of Contents"},{"location":"patch_groups.html#group-properties","text":"There are only a couple of things to remember about patch groups. The owner of the group has the ability to assign other admins which can add and subtract patches from the group. The owner is the only account which can re-name the patch group and the owner is the only account which can re-assign ownership to another account and change it's type. To edit the groups properties, simply click on the \"Pencil\" icon for the group. Patch group properties","title":"Group Properties "},{"location":"patch_groups.html#assign-patches","text":"To assign patches to a patch group click on the list icon . The patch group will open and you can assign or remove assigned patches from here. It important to note, once your done selecting your patches you will need to \"Save\" the patch group. The MacPatch client agent will not recognize the changes without saving. To save the group click on the disk icon .","title":"Assign Patches "},{"location":"profiles.html","text":"","title":"Profiles"},{"location":"server_install.html","text":"Table of Contents Required Software Perquisites Linux Packages MySQL Download, Setup and Install Get Software Install Server Software Setup Database Configure Server Software Load and Populate Database Server Setup Configuration First Login Server Configuration Default Patch Group Configuration Client Agent Configuration Download and Add Patch Content Apple Patches Custom Patches Prequisits Requirements root or sudo access will be needed to perform these tasks. Requirements Operating System: macOS Mac OS X 10.10 or higher Linux RHEL 7.x or CentOS 7.x Ubuntu Server 16.04 RAM: 4 Gig min MySQL (5.6.x is Recommended) MySQL 8 not tested. Perquisites Install MySQL 5.6.x (must have root password) If Installing on Mac OS X, Xcode and command line developer tools need to be installed AND the license agreement needs to have been accepted. Linux Packages The MacPatch server build script will attempt to install a number of required software packages there are a few packages that are recommended that be installed prior to running the build script. RedHat CentOS RedHat CentOS will require the \"Development tools\" group install. This group has a number of packages needed to build the MacPatch server. yum groupinstall \"Development tools\" yum install epel-release Ubuntu apt-get install build-essential MySQL While MySQL 5.6 is still the recommended database version. MySQL 5.7 has been out for some time now. MySQL changed the sql_mode settings in 5.7 which broke some queries in MacPatch. In order to use MacPatch with MySQL 5.7 the sql_mode setting will have to be changed. To view and set the config use SELECT @@GLOBAL.sql_mode; SET GLOBAL sql_mode = 'modes'; The default SQL mode in MySQL 5.7 includes these modes: ONLY_FULL_GROUP_BY, STRICT_TRANS_TABLES, NO_ZERO_IN_DATE, NO_ZERO_DATE, ERROR_FOR_DIVISION_BY_ZERO, NO_AUTO_CREATE_USER, and NO_ENGINE_SUBSTITUTION. The default SQL mode in MySQL 5.6 includes this mode: NO_ENGINE_SUBSTITUTION Preliminary testing has been successful when removing the ONLY_FULL_GROUP_BY mode. Download, Setup and Install Get Software mkdir /opt (If Needed) cd /opt git clone https://github.com/LLNL/MacPatch.git Install Software cd /opt/MacPatch/Scripts sudo ./MPBuildServer.sh Note: If your behind a SSL content inspector add the custom ca using export PIP_CERT=/path/to/ca/cert.crt Setup Database The database setup script only creates the MacPatch database and the 2 database accounts needed to use the database. Tuning the MySQL server is out of scope for this document. Please remeber the passwords for mpdbadm and mpdbro accounts while running this script. They will be required during the SetupServer.py script database section. cd /opt/MacPatch/Server/conf/scripts/setup ./MPDBSetup.sh (must be run on the MySQL server) Note: The MPDBSetup.sh can be/should be copied to another host if the database exists on a seperate server. Configure Server Software cd /opt/MacPatch/Server/conf/scripts/setup sudo ./ServerSetup.py --setup Configure MacPatch schema populate default data cd /opt/MacPatch/Server/apps source env/bin/activate ./mpapi.py db upgrade head ./mpapi.py populate_db deactivate Note: If \"mpapi.py db upgrade head\" is done using a root shell. Please delete the \"/opt/MacPatch/Server/logs/mpwsapi.log\" file. It will be owned by root and the REST api will not launch. Start Services cd /opt/MacPatch/Server/conf/scripts/setup sudo ./ServerSetup.py --load All -- Server Setup Configuration The MacPatch server software has now been installed and should be up and running. The server is almost ready for accepting clients. There are a few more server configuration settings which need to be configured. First Login The default user name is \u201cmpadmin\u201d and the password is \u201c*mpadmin*\u201d, Unless it was changed using the \u201cServerSetup.py\u201d script. You will need to login for the first time with this account to do all of the setup tasks. Once these tasks are completed it\u2019s recommended that this account be disabled. This can be done by editing the siteconfig.json file, which is located in /opt/MacPatch/Server/etc/. From: \"users\": { \"admin\": { \"enabled\": true, \"name\": \"mpadmin\", \"pass\": \"*mpadmin*\" } } To: \"users\": { \"admin\": { \"enabled\": false, \"name\": \"mpadmin\", \"pass\": \"*mpadmin*\" } } Server Configuration Each MacPatch server needs to be added to the environment. The master server is always added automatically. It is recommended that you login and verify the master server settings. It is common during install that the master server address will be added as localhost or 127.0.0.1. Please make sure that the correct hostname or IP address is set and that \"active\" is enabled. Go to \u201cAdmin - Server - MacPatch Servers\u201d Double Click the row with your server or single click the row and click the \u201cPencil\u201d button. Default Patch Group Configuration A default patch group will be created during install. The name of the default patch group is \u201cDefault\u201d. You may use it or create a new one. To edit the contents for the patch group simply click the \u201cPencil\u201d icon next to the group name. To add patches click the check boxes to add or subtract patches from the group. When done click the \u201cSave\u201d icon. (Important Step) Go to \u201cPatches - Patch Groups\u201d Double Click the row with your server or single click the row and click the \u201cPencil\u201d button. Client Agent Configuration A default agent configuration is added during the install. Please verify the client agent configuration before the client agent is uploaded. Recommended Go to \u201cAdmin - Client Agents - Configure\u201d Set the following 3 properties to be enforced MPServerAddress MPServerPort MPServerSSL Verify the \u201cPatchGroup\u201d setting. If you have changed it set it before you upload the client agent. Click the save button Click the icon in the \u201cDefault\u201d column for the default configuration. (Important Step) Set MPServerAllowSelfSigned to 1 if your in a test environment and not using a valid SSL vertificate. Only the default agent configuration will get added to the client agent upon upload. -- Download Add Patch Content Apple Updates Apple patch content will download eventually on it\u2019s own cycle, but for the first time it\u2019s recommended to download it manually. The Apple Software Update content settings are stored in a json file (/opt/MacPatch/Server/etc/patchloader.json). By default, Apple patches for 10.9 through 10.12 will be processed and supported. Run the following command via the Terminal on the Master MacPatch server. Linux # sudo -u www-data /opt/MacPatch/Server/conf/scripts/MPSUSPatchSync.py Mac # sudo -u _appserver /opt/MacPatch/Server/conf/scripts/MPSUSPatchSync.py Custom Updates To create your own custom patch content please read the \"Custom Patch Content\" docs . To use \"AutoPkg\" to add patch content please read the \"AutoPkg patch content\" docs .","title":"Server Install & Setup"},{"location":"server_install.html#table-of-contents","text":"Required Software Perquisites Linux Packages MySQL Download, Setup and Install Get Software Install Server Software Setup Database Configure Server Software Load and Populate Database Server Setup Configuration First Login Server Configuration Default Patch Group Configuration Client Agent Configuration Download and Add Patch Content Apple Patches Custom Patches","title":"Table of Contents"},{"location":"server_install.html#prequisits-requirements","text":"root or sudo access will be needed to perform these tasks.","title":"Prequisits &amp; Requirements"},{"location":"server_install.html#requirements","text":"Operating System: macOS Mac OS X 10.10 or higher Linux RHEL 7.x or CentOS 7.x Ubuntu Server 16.04 RAM: 4 Gig min MySQL (5.6.x is Recommended) MySQL 8 not tested.","title":"Requirements "},{"location":"server_install.html#perquisites","text":"Install MySQL 5.6.x (must have root password) If Installing on Mac OS X, Xcode and command line developer tools need to be installed AND the license agreement needs to have been accepted.","title":"Perquisites "},{"location":"server_install.html#linux-packages","text":"The MacPatch server build script will attempt to install a number of required software packages there are a few packages that are recommended that be installed prior to running the build script. RedHat CentOS RedHat CentOS will require the \"Development tools\" group install. This group has a number of packages needed to build the MacPatch server. yum groupinstall \"Development tools\" yum install epel-release Ubuntu apt-get install build-essential","title":"Linux Packages "},{"location":"server_install.html#mysql","text":"While MySQL 5.6 is still the recommended database version. MySQL 5.7 has been out for some time now. MySQL changed the sql_mode settings in 5.7 which broke some queries in MacPatch. In order to use MacPatch with MySQL 5.7 the sql_mode setting will have to be changed. To view and set the config use SELECT @@GLOBAL.sql_mode; SET GLOBAL sql_mode = 'modes'; The default SQL mode in MySQL 5.7 includes these modes: ONLY_FULL_GROUP_BY, STRICT_TRANS_TABLES, NO_ZERO_IN_DATE, NO_ZERO_DATE, ERROR_FOR_DIVISION_BY_ZERO, NO_AUTO_CREATE_USER, and NO_ENGINE_SUBSTITUTION. The default SQL mode in MySQL 5.6 includes this mode: NO_ENGINE_SUBSTITUTION Preliminary testing has been successful when removing the ONLY_FULL_GROUP_BY mode.","title":"MySQL "},{"location":"server_install.html#download-setup-and-install","text":"","title":"Download, Setup and Install "},{"location":"server_install.html#get-software","text":"mkdir /opt (If Needed) cd /opt git clone https://github.com/LLNL/MacPatch.git","title":"Get Software "},{"location":"server_install.html#install-software","text":"cd /opt/MacPatch/Scripts sudo ./MPBuildServer.sh Note: If your behind a SSL content inspector add the custom ca using export PIP_CERT=/path/to/ca/cert.crt","title":"Install Software "},{"location":"server_install.html#setup-database","text":"The database setup script only creates the MacPatch database and the 2 database accounts needed to use the database. Tuning the MySQL server is out of scope for this document. Please remeber the passwords for mpdbadm and mpdbro accounts while running this script. They will be required during the SetupServer.py script database section. cd /opt/MacPatch/Server/conf/scripts/setup ./MPDBSetup.sh (must be run on the MySQL server) Note: The MPDBSetup.sh can be/should be copied to another host if the database exists on a seperate server.","title":"Setup Database "},{"location":"server_install.html#configure-server-software","text":"cd /opt/MacPatch/Server/conf/scripts/setup sudo ./ServerSetup.py --setup","title":"Configure Server Software "},{"location":"server_install.html#configure-macpatch-schema-populate-default-data","text":"cd /opt/MacPatch/Server/apps source env/bin/activate ./mpapi.py db upgrade head ./mpapi.py populate_db deactivate Note: If \"mpapi.py db upgrade head\" is done using a root shell. Please delete the \"/opt/MacPatch/Server/logs/mpwsapi.log\" file. It will be owned by root and the REST api will not launch.","title":"Configure MacPatch schema &amp; populate default data "},{"location":"server_install.html#start-services","text":"cd /opt/MacPatch/Server/conf/scripts/setup sudo ./ServerSetup.py --load All --","title":"Start Services"},{"location":"server_install.html#server-setup-configuration","text":"The MacPatch server software has now been installed and should be up and running. The server is almost ready for accepting clients. There are a few more server configuration settings which need to be configured.","title":"Server Setup &amp; Configuration "},{"location":"server_install.html#first-login","text":"The default user name is \u201cmpadmin\u201d and the password is \u201c*mpadmin*\u201d, Unless it was changed using the \u201cServerSetup.py\u201d script. You will need to login for the first time with this account to do all of the setup tasks. Once these tasks are completed it\u2019s recommended that this account be disabled. This can be done by editing the siteconfig.json file, which is located in /opt/MacPatch/Server/etc/. From: \"users\": { \"admin\": { \"enabled\": true, \"name\": \"mpadmin\", \"pass\": \"*mpadmin*\" } } To: \"users\": { \"admin\": { \"enabled\": false, \"name\": \"mpadmin\", \"pass\": \"*mpadmin*\" } }","title":"First Login "},{"location":"server_install.html#server-configuration","text":"Each MacPatch server needs to be added to the environment. The master server is always added automatically. It is recommended that you login and verify the master server settings. It is common during install that the master server address will be added as localhost or 127.0.0.1. Please make sure that the correct hostname or IP address is set and that \"active\" is enabled. Go to \u201cAdmin - Server - MacPatch Servers\u201d Double Click the row with your server or single click the row and click the \u201cPencil\u201d button.","title":"Server Configuration "},{"location":"server_install.html#default-patch-group-configuration","text":"A default patch group will be created during install. The name of the default patch group is \u201cDefault\u201d. You may use it or create a new one. To edit the contents for the patch group simply click the \u201cPencil\u201d icon next to the group name. To add patches click the check boxes to add or subtract patches from the group. When done click the \u201cSave\u201d icon. (Important Step) Go to \u201cPatches - Patch Groups\u201d Double Click the row with your server or single click the row and click the \u201cPencil\u201d button.","title":"Default Patch Group Configuration "},{"location":"server_install.html#client-agent-configuration","text":"A default agent configuration is added during the install. Please verify the client agent configuration before the client agent is uploaded. Recommended Go to \u201cAdmin - Client Agents - Configure\u201d Set the following 3 properties to be enforced MPServerAddress MPServerPort MPServerSSL Verify the \u201cPatchGroup\u201d setting. If you have changed it set it before you upload the client agent. Click the save button Click the icon in the \u201cDefault\u201d column for the default configuration. (Important Step) Set MPServerAllowSelfSigned to 1 if your in a test environment and not using a valid SSL vertificate. Only the default agent configuration will get added to the client agent upon upload. --","title":"Client Agent Configuration "},{"location":"server_install.html#download-add-patch-content","text":"Apple Updates Apple patch content will download eventually on it\u2019s own cycle, but for the first time it\u2019s recommended to download it manually. The Apple Software Update content settings are stored in a json file (/opt/MacPatch/Server/etc/patchloader.json). By default, Apple patches for 10.9 through 10.12 will be processed and supported. Run the following command via the Terminal on the Master MacPatch server. Linux # sudo -u www-data /opt/MacPatch/Server/conf/scripts/MPSUSPatchSync.py Mac # sudo -u _appserver /opt/MacPatch/Server/conf/scripts/MPSUSPatchSync.py Custom Updates To create your own custom patch content please read the \"Custom Patch Content\" docs . To use \"AutoPkg\" to add patch content please read the \"AutoPkg patch content\" docs .","title":"Download &amp; Add Patch Content "},{"location":"sw_groups.html","text":"","title":"Groups"},{"location":"sw_packages.html","text":"","title":"Packages"},{"location":"sw_tasks.html","text":"","title":"Tasks"},{"location":"user_accounts.html","text":"Table of Contents Default Admin Account Change Password Disable Admin Account User Accounts Standard Accounts Directory Accounts Account Rights Default Admin The default admin account is local to the MacPatch server. This account should only be used for setup of the MacPatch \"Master\" server. Once a load admin account has been created. It's recommended that the admin account be disabled. - Change Default Admin password Changing the default admin account password requires editing the siteconfig.json file. This file is lcoated in \"/opt/MacPatch/Server/etc/\". Please note, the password is in clear text. - Disable Default Admin account Disabling the default requires editing the siteconfig.json file. This file is lcoated in \"/opt/MacPatch/Server/etc/\". To disable the account simply change the \"enabled\" key value to \"false\". From: \"users\": { \"admin\": { \"enabled\": true, \"name\": \"mpadmin\", \"pass\": \"*mpadmin*\" } } To: \"users\": { \"admin\": { \"enabled\": false, \"name\": \"mpadmin\", \"pass\": \"*mpadmin*\" } } User Accounts MacPatch supports 2 different accounts not including the default admin account. MacPatch supports standard database accounts and LDAP/Active Directory accounts. Local Accounts To add or remove a standard account, navigate to the Admin- Accounts menu. Simply click on the \"+\" icon just above the accounts table. Assiging rights to a user account is fairly straight forward. If no rights are assigned the user can login and create a Client group and a patch group. This user will also be the owner of these groups and can assign additional users who can assist in managing these options. Directory Accounts MacPatch supports user accounts coming from LDAP/Active directory. During the server setup you were asked if you wanted to enable LDAP user support. If you answered \"Yes\", then all of your settings were entered in to the \"siteconfig.json\" file. The settings are under the \"ldap\" key. By default any user in the directory is allowed to login to MacPatch. This user will have the basic standard user rights. If you wish to limit directory users who can log in to the MacPatch admin console you will need to populate to keys in the \"ldap\" dictiobnary. First you will need to enable the \"enableGroupFilter\" attribute by setting it to \"true\". Then you will need to edit the \"groupFilter\" attribute. This attribute is a list, and is just the name the LDAP group. Example: \"groupFilter\": ['Group1', 'Group2'] Assiging rights to ldap users is just like a standard account. The only difference is the user has to login at least one time so that the user will show in the accounts table. Account Rights Right Description Admin This right gives the user admin rights through out the console. AutoPKG This right allows the user account to upload new packages using the autopkg tool. Agent Upload This rtight allows the user to upload new MacPatch client agents. API This right allows the user to access MacPatch API's for automation. (Not Completed)","title":"User Accounts"},{"location":"user_accounts.html#table-of-contents","text":"Default Admin Account Change Password Disable Admin Account User Accounts Standard Accounts Directory Accounts Account Rights","title":"Table of Contents"},{"location":"user_accounts.html#default-admin","text":"The default admin account is local to the MacPatch server. This account should only be used for setup of the MacPatch \"Master\" server. Once a load admin account has been created. It's recommended that the admin account be disabled.","title":"Default Admin "},{"location":"user_accounts.html#-change-default-admin-password","text":"Changing the default admin account password requires editing the siteconfig.json file. This file is lcoated in \"/opt/MacPatch/Server/etc/\". Please note, the password is in clear text.","title":"- Change Default Admin password"},{"location":"user_accounts.html#-disable-default-admin-account","text":"Disabling the default requires editing the siteconfig.json file. This file is lcoated in \"/opt/MacPatch/Server/etc/\". To disable the account simply change the \"enabled\" key value to \"false\". From: \"users\": { \"admin\": { \"enabled\": true, \"name\": \"mpadmin\", \"pass\": \"*mpadmin*\" } } To: \"users\": { \"admin\": { \"enabled\": false, \"name\": \"mpadmin\", \"pass\": \"*mpadmin*\" } }","title":"- Disable Default Admin account"},{"location":"user_accounts.html#user-accounts","text":"MacPatch supports 2 different accounts not including the default admin account. MacPatch supports standard database accounts and LDAP/Active Directory accounts.","title":"User Accounts "},{"location":"user_accounts.html#local-accounts","text":"To add or remove a standard account, navigate to the Admin- Accounts menu. Simply click on the \"+\" icon just above the accounts table. Assiging rights to a user account is fairly straight forward. If no rights are assigned the user can login and create a Client group and a patch group. This user will also be the owner of these groups and can assign additional users who can assist in managing these options.","title":"Local Accounts"},{"location":"user_accounts.html#directory-accounts","text":"MacPatch supports user accounts coming from LDAP/Active directory. During the server setup you were asked if you wanted to enable LDAP user support. If you answered \"Yes\", then all of your settings were entered in to the \"siteconfig.json\" file. The settings are under the \"ldap\" key. By default any user in the directory is allowed to login to MacPatch. This user will have the basic standard user rights. If you wish to limit directory users who can log in to the MacPatch admin console you will need to populate to keys in the \"ldap\" dictiobnary. First you will need to enable the \"enableGroupFilter\" attribute by setting it to \"true\". Then you will need to edit the \"groupFilter\" attribute. This attribute is a list, and is just the name the LDAP group. Example: \"groupFilter\": ['Group1', 'Group2'] Assiging rights to ldap users is just like a standard account. The only difference is the user has to login at least one time so that the user will show in the accounts table.","title":"Directory Accounts"},{"location":"user_accounts.html#account-rights","text":"Right Description Admin This right gives the user admin rights through out the console. AutoPKG This right allows the user account to upload new packages using the autopkg tool. Agent Upload This rtight allows the user to upload new MacPatch client agents. API This right allows the user to access MacPatch API's for automation. (Not Completed)","title":"Account Rights "},{"location":"about/DISCLAIMER.html","text":"GNU GENERAL PUBLIC LICENSE Version 2, June 1991 Copyright (C) 1989, 1991 Free Software Foundation, Inc. 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA Everyone is permitted to copy and distribute verbatim copies of this license document, but changing it is not allowed. Preamble A. This notice is required to be provided under our contract with the U.S. Department of Energy (DOE). This work was produced at the Lawrence Livermore National Laboratory under Contract No. DE-AC52-07NA27344 with the DOE. B. Neither the United States Government nor Lawrence Livermore National Security, LLC nor any of their employees, makes any warranty, express or implied, or assumes any liability or responsibility for the accuracy, completeness, or usefulness of any information, apparatus, product, or process disclosed, or represents that its use would not infringe privately-owned rights. C. Also, reference herein to any specific commercial products, process, or services by trade name, trademark, manufacturer or otherwise does not necessarily constitute or imply its endorsement, recommendation, or favoring by the United States Government or Lawrence Livermore National Security, LLC. The views and opinions of authors expressed herein do not necessarily state or reflect those of the United States Government or Lawrence Livermore National Security, LLC, and shall not be used for advertising or product endorsement purposes. The precise terms and conditions for copying, distribution and modification follows. GNU GENERAL PUBLIC LICENSE TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION This License applies to any program or other work which contains a notice placed by the copyright holder saying it may be distributed under the terms of this General Public License. The \"Program\", below, refers to any such program or work, and a \"work based on the Program\" means either the Program or any derivative work under copyright law: that is to say, a work containing the Program or a portion of it, either verbatim or with modifications and/or translated into another language. (Hereinafter, translation is included without limitation in the term \"modification\".) Each licensee is addressed as \"you\". Activities other than copying, distribution and modification are not covered by this License; they are outside its scope. The act of running the Program is not restricted, and the output from the Program is covered only if its contents constitute a work based on the Program (independent of having been made by running the Program). Whether that is true depends on what the Program does. You may copy and distribute verbatim copies of the Program's source code as you receive it, in any medium, provided that you conspicuously and appropriately publish on each copy an appropriate copyright notice and disclaimer of warranty; keep intact all the notices that refer to this License and to the absence of any warranty; and give any other recipients of the Program a copy of this License along with the Program. You may charge a fee for the physical act of transferring a copy, and you may at your option offer warranty protection in exchange for a fee. You may modify your copy or copies of the Program or any portion of it, thus forming a work based on the Program, and copy and distribute such modifications or work under the terms of Section 1 above, provided that you also meet all of these conditions: a) You must cause the modified files to carry prominent notices stating that you changed the files and the date of any change. b) You must cause any work that you distribute or publish, that in whole or in part contains or is derived from the Program or any part thereof, to be licensed as a whole at no charge to all third parties under the terms of this License. c) If the modified program normally reads commands interactively when run, you must cause it, when started running for such interactive use in the most ordinary way, to print or display an announcement including an appropriate copyright notice and a notice that there is no warranty (or else, saying that you provide a warranty) and that users may redistribute the program under these conditions, and telling the user how to view a copy of this License. (Exception: if the Program itself is interactive but does not normally print such an announcement, your work based on the Program is not required to print an announcement.) These requirements apply to the modified work as a whole. If identifiable sections of that work are not derived from the Program, and can be reasonably considered independent and separate works in themselves, then this License, and its terms, do not apply to those sections when you distribute them as separate works. But when you distribute the same sections as part of a whole which is a work based on the Program, the distribution of the whole must be on the terms of this License, whose permissions for other licensees extend to the entire whole, and thus to each and every part regardless of who wrote it. Thus, it is not the intent of this section to claim rights or contest your rights to work written entirely by you; rather, the intent is to exercise the right to control the distribution of derivative or collective works based on the Program. In addition, mere aggregation of another work not based on the Program with the Program (or with a work based on the Program) on a volume of a storage or distribution medium does not bring the other work under the scope of this License. You may copy and distribute the Program (or a work based on it, under Section 2) in object code or executable form under the terms of Sections 1 and 2 above provided that you also do one of the following: a) Accompany it with the complete corresponding machine-readable source code, which must be distributed under the terms of Sections 1 and 2 above on a medium customarily used for software interchange; or, b) Accompany it with a written offer, valid for at least three years, to give any third party, for a charge no more than your cost of physically performing source distribution, a complete machine-readable copy of the corresponding source code, to be distributed under the terms of Sections 1 and 2 above on a medium customarily used for software interchange; or, c) Accompany it with the information you received as to the offer to distribute corresponding source code. (This alternative is allowed only for noncommercial distribution and only if you received the program in object code or executable form with such an offer, in accord with Subsection b above.) The source code for a work means the preferred form of the work for making modifications to it. For an executable work, complete source code means all the source code for all modules it contains, plus any associated interface definition files, plus the scripts used to control compilation and installation of the executable. However, as a special exception, the source code distributed need not include anything that is normally distributed (in either source or binary form) with the major components (compiler, kernel, and so on) of the operating system on which the executable runs, unless that component itself accompanies the executable. If distribution of executable or object code is made by offering access to copy from a designated place, then offering equivalent access to copy the source code from the same place counts as distribution of the source code, even though third parties are not compelled to copy the source along with the object code. You may not copy, modify, sublicense, or distribute the Program except as expressly provided under this License. Any attempt otherwise to copy, modify, sublicense or distribute the Program is void, and will automatically terminate your rights under this License. However, parties who have received copies, or rights, from you under this License will not have their licenses terminated so long as such parties remain in full compliance. You are not required to accept this License, since you have not signed it. However, nothing else grants you permission to modify or distribute the Program or its derivative works. These actions are prohibited by law if you do not accept this License. Therefore, by modifying or distributing the Program (or any work based on the Program), you indicate your acceptance of this License to do so, and all its terms and conditions for copying, distributing or modifying the Program or works based on it. Each time you redistribute the Program (or any work based on the Program), the recipient automatically receives a license from the original licensor to copy, distribute or modify the Program subject to these terms and conditions. You may not impose any further restrictions on the recipients' exercise of the rights granted herein. You are not responsible for enforcing compliance by third parties to this License. If, as a consequence of a court judgment or allegation of patent infringement or for any other reason (not limited to patent issues), conditions are imposed on you (whether by court order, agreement or otherwise) that contradict the conditions of this License, they do not excuse you from the conditions of this License. If you cannot distribute so as to satisfy simultaneously your obligations under this License and any other pertinent obligations, then as a consequence you may not distribute the Program at all. For example, if a patent license would not permit royalty-free redistribution of the Program by all those who receive copies directly or indirectly through you, then the only way you could satisfy both it and this License would be to refrain entirely from distribution of the Program. If any portion of this section is held invalid or unenforceable under any particular circumstance, the balance of the section is intended to apply and the section as a whole is intended to apply in other circumstances. It is not the purpose of this section to induce you to infringe any patents or other property right claims or to contest validity of any such claims; this section has the sole purpose of protecting the integrity of the free software distribution system, which is implemented by public license practices. Many people have made generous contributions to the wide range of software distributed through that system in reliance on consistent application of that system; it is up to the author/donor to decide if he or she is willing to distribute software through any other system and a licensee cannot impose that choice. This section is intended to make thoroughly clear what is believed to be a consequence of the rest of this License. If the distribution and/or use of the Program is restricted in certain countries either by patents or by copyrighted interfaces, the original copyright holder who places the Program under this License may add an explicit geographical distribution limitation excluding those countries, so that distribution is permitted only in or among countries not thus excluded. In such case, this License incorporates the limitation as if written in the body of this License. The Free Software Foundation may publish revised and/or new versions of the General Public License from time to time. Such new versions will be similar in spirit to the present version, but may differ in detail to address new problems or concerns. Each version is given a distinguishing version number. If the Program specifies a version number of this License which applies to it and \"any later version\", you have the option of following the terms and conditions either of that version or of any later version published by the Free Software Foundation. If the Program does not specify a version number of this License, you may choose any version ever published by the Free Software Foundation. If you wish to incorporate parts of the Program into other free programs whose distribution conditions are different, write to the author to ask for permission. For software which is copyrighted by the Free Software Foundation, write to the Free Software Foundation; we sometimes make exceptions for this. Our decision will be guided by the two goals of preserving the free status of all derivatives of our free software and of promoting the sharing and reuse of software generally. NO WARRANTY BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW. EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU. SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR REDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES. END OF TERMS AND CONDITIONS","title":"DISCLAIMER"},{"location":"about/LICENSE.html","text":"GNU GENERAL PUBLIC LICENSE Version 2, June 1991 Copyright (C) 1989, 1991 Free Software Foundation, Inc. 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA Everyone is permitted to copy and distribute verbatim copies of this license document, but changing it is not allowed. Our Preamble A. This notice is required to be provided under our contract with the U.S. Department of Energy (DOE). This work was produced at the Lawrence Livermore National Laboratory under Contract No. DE-AC52-07NA27344 with the DOE. B. Neither the United States Government nor Lawrence Livermore National Security, LLC nor any of their employees, makes any warranty, express or implied, or assumes any liability or responsibility for the accuracy, completeness, or usefulness of any information, apparatus, product, or process disclosed, or represents that its use would not infringe privately-owned rights. C. Also, reference herein to any specific commercial products, process, or services by trade name, trademark, manufacturer or otherwise does not necessarily constitute or imply its endorsement, recommendation, or favoring by the United States Government or Lawrence Livermore National Security, LLC. The views and opinions of authors expressed herein do not necessarily state or reflect those of the United States Government or Lawrence Livermore National Security, LLC, and shall not be used for advertising or product endorsement purposes. The precise terms and conditions for copying, distribution and modification follows. GNU GENERAL PUBLIC LICENSE TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION 0. This License applies to any program or other work which contains a notice placed by the copyright holder saying it may be distributed under the terms of this General Public License. The \"Program\", below, refers to any such program or work, and a \"work based on the Program\" means either the Program or any derivative work under copyright law: that is to say, a work containing the Program or a portion of it, either verbatim or with modifications and/or translated into another language. (Hereinafter, translation is included without limitation in the term \"modification\".) Each licensee is addressed as \"you\". Activities other than copying, distribution and modification are not covered by this License; they are outside its scope. The act of running the Program is not restricted, and the output from the Program is covered only if its contents constitute a work based on the Program (independent of having been made by running the Program). Whether that is true depends on what the Program does. 1. You may copy and distribute verbatim copies of the Program's source code as you receive it, in any medium, provided that you conspicuously and appropriately publish on each copy an appropriate copyright notice and disclaimer of warranty; keep intact all the notices that refer to this License and to the absence of any warranty; and give any other recipients of the Program a copy of this License along with the Program. You may charge a fee for the physical act of transferring a copy, and you may at your option offer warranty protection in exchange for a fee. 2. You may modify your copy or copies of the Program or any portion of it, thus forming a work based on the Program, and copy and distribute such modifications or work under the terms of Section 1 above, provided that you also meet all of these conditions: a) You must cause the modified files to carry prominent notices stating that you changed the files and the date of any change. b) You must cause any work that you distribute or publish, that in whole or in part contains or is derived from the Program or any part thereof, to be licensed as a whole at no charge to all third parties under the terms of this License. c) If the modified program normally reads commands interactively when run, you must cause it, when started running for such interactive use in the most ordinary way, to print or display an announcement including an appropriate copyright notice and a notice that there is no warranty (or else, saying that you provide a warranty) and that users may redistribute the program under these conditions, and telling the user how to view a copy of this License. (Exception: if the Program itself is interactive but does not normally print such an announcement, your work based on the Program is not required to print an announcement.) These requirements apply to the modified work as a whole. If identifiable sections of that work are not derived from the Program, and can be reasonably considered independent and separate works in themselves, then this License, and its terms, do not apply to those sections when you distribute them as separate works. But when you distribute the same sections as part of a whole which is a work based on the Program, the distribution of the whole must be on the terms of this License, whose permissions for other licensees extend to the entire whole, and thus to each and every part regardless of who wrote it. Thus, it is not the intent of this section to claim rights or contest your rights to work written entirely by you; rather, the intent is to exercise the right to control the distribution of derivative or collective works based on the Program. In addition, mere aggregation of another work not based on the Program with the Program (or with a work based on the Program) on a volume of a storage or distribution medium does not bring the other work under the scope of this License. 3. You may copy and distribute the Program (or a work based on it, under Section 2) in object code or executable form under the terms of Sections 1 and 2 above provided that you also do one of the following: a) Accompany it with the complete corresponding machine-readable source code, which must be distributed under the terms of Sections 1 and 2 above on a medium customarily used for software interchange; or, b) Accompany it with a written offer, valid for at least three years, to give any third party, for a charge no more than your cost of physically performing source distribution, a complete machine-readable copy of the corresponding source code, to be distributed under the terms of Sections 1 and 2 above on a medium customarily used for software interchange; or, c) Accompany it with the information you received as to the offer to distribute corresponding source code. (This alternative is allowed only for noncommercial distribution and only if you received the program in object code or executable form with such an offer, in accord with Subsection b above.) The source code for a work means the preferred form of the work for making modifications to it. For an executable work, complete source code means all the source code for all modules it contains, plus any associated interface definition files, plus the scripts used to control compilation and installation of the executable. However, as a special exception, the source code distributed need not include anything that is normally distributed (in either source or binary form) with the major components (compiler, kernel, and so on) of the operating system on which the executable runs, unless that component itself accompanies the executable. If distribution of executable or object code is made by offering access to copy from a designated place, then offering equivalent access to copy the source code from the same place counts as distribution of the source code, even though third parties are not compelled to copy the source along with the object code. 4. You may not copy, modify, sublicense, or distribute the Program except as expressly provided under this License. Any attempt otherwise to copy, modify, sublicense or distribute the Program is void, and will automatically terminate your rights under this License. However, parties who have received copies, or rights, from you under this License will not have their licenses terminated so long as such parties remain in full compliance. 5. You are not required to accept this License, since you have not signed it. However, nothing else grants you permission to modify or distribute the Program or its derivative works. These actions are prohibited by law if you do not accept this License. Therefore, by modifying or distributing the Program (or any work based on the Program), you indicate your acceptance of this License to do so, and all its terms and conditions for copying, distributing or modifying the Program or works based on it. 6. Each time you redistribute the Program (or any work based on the Program), the recipient automatically receives a license from the original licensor to copy, distribute or modify the Program subject to these terms and conditions. You may not impose any further restrictions on the recipients' exercise of the rights granted herein. You are not responsible for enforcing compliance by third parties to this License. 7. If, as a consequence of a court judgment or allegation of patent infringement or for any other reason (not limited to patent issues), conditions are imposed on you (whether by court order, agreement or otherwise) that contradict the conditions of this License, they do not excuse you from the conditions of this License. If you cannot distribute so as to satisfy simultaneously your obligations under this License and any other pertinent obligations, then as a consequence you may not distribute the Program at all. For example, if a patent license would not permit royalty-free redistribution of the Program by all those who receive copies directly or indirectly through you, then the only way you could satisfy both it and this License would be to refrain entirely from distribution of the Program. If any portion of this section is held invalid or unenforceable under any particular circumstance, the balance of the section is intended to apply and the section as a whole is intended to apply in other circumstances. It is not the purpose of this section to induce you to infringe any patents or other property right claims or to contest validity of any such claims; this section has the sole purpose of protecting the integrity of the free software distribution system, which is implemented by public license practices. Many people have made generous contributions to the wide range of software distributed through that system in reliance on consistent application of that system; it is up to the author/donor to decide if he or she is willing to distribute software through any other system and a licensee cannot impose that choice. This section is intended to make thoroughly clear what is believed to be a consequence of the rest of this License. 8. If the distribution and/or use of the Program is restricted in certain countries either by patents or by copyrighted interfaces, the original copyright holder who places the Program under this License may add an explicit geographical distribution limitation excluding those countries, so that distribution is permitted only in or among countries not thus excluded. In such case, this License incorporates the limitation as if written in the body of this License. 9. The Free Software Foundation may publish revised and/or new versions of the General Public License from time to time. Such new versions will be similar in spirit to the present version, but may differ in detail to address new problems or concerns. Each version is given a distinguishing version number. If the Program specifies a version number of this License which applies to it and \"any later version\", you have the option of following the terms and conditions either of that version or of any later version published by the Free Software Foundation. If the Program does not specify a version number of this License, you may choose any version ever published by the Free Software Foundation. 10. If you wish to incorporate parts of the Program into other free programs whose distribution conditions are different, write to the author to ask for permission. For software which is copyrighted by the Free Software Foundation, write to the Free Software Foundation; we sometimes make exceptions for this. Our decision will be guided by the two goals of preserving the free status of all derivatives of our free software and of promoting the sharing and reuse of software generally. NO WARRANTY 11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW. EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU. SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION. 12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR REDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES. END OF TERMS AND CONDITIONS","title":"LICENSE"}]}